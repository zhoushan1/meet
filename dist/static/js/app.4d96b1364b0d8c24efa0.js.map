{"version":3,"sources":["webpack:///./src/App.vue?a660","webpack:///./src/App.vue","webpack:///./src/router.js","webpack:///./src/service/init.service.js","webpack:///./src/main.js","webpack:///./src/service/http.service.js","webpack:///./src/config/pro.config.js","webpack:///./src/config/index.js","webpack:///./src/config/dev.config.js","webpack:///./src/api/meeting.api.js","webpack:///./src/service/local.service.js","webpack:///./src/mock.js"],"names":["App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","ssrContext","vue_esm","use","vue_router_esm","routes","name","alias","path","component","Promise","all","e","then","bind","meta","title","router","mode","init_service","console","log","beforeEach","to","from","next","config","productionTip","el","h","axios_default","a","defaults","headers","post","timeout","http_service","url","options","arguments","length","undefined","es6_promise_default","resolve","reject","get","response","catch","data","result","keys_default","map","ele","encodeURIComponent","slice","formatParams","pro_config","ApiBaseUrl","window","location","protocol","apiBase","__webpack_exports__","getHomeData","test","getVerify","login","searchPeople","sessionid","local_service","searchDepartments","searchChildren","getMeetingList","pluses","jsonRegex","encode","s","_cookie","raw","decode","decodeURIComponent","stringifyCookieValue","value","json","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","String","read","converter","indexOf","replace","JSON","parse","parseCookieValue","cb","key","expires","days","t","Date","setMilliseconds","getMilliseconds","document","cookie","toUTCString","domain","secure","join","cookies","split","i","l","parts","shift","cookieStorage","cookieKeyPrefix","set","clear","remove","localStorage","getItem","setItem","removeItem","originStorage","supportLocalStorage","k","_return","v","Object","prototype","toString","call","__WEBPACK_IMPORTED_MODULE_0_mockjs___default","mock","base64","cert_code","cmdid","date_time","last_login_ip","last_login_time","mod_pwd_flag","session_id","tenant_id","tenant_tags","usr_mark","department_ids","senior_ids","creator_usr_ids","last_modify_dtms","department_names","department_descs","create_dtms","usr_online_status","usr_ids","usr_nick_names","usr_login_ids","senior_id","ptotocol_types","is_endpoints","cuids","phone_nos","nick_names","activates","creator_times","current_department","verifies","usr_types","duties","online_status","max_rooms","call_addrs","valid_periods","emails","login_ids","fixed_phones","usr_avatars","priorities","priv_room_ids","usr_marks","genders","priority_mps","launcher_usr_nick_names","locks","mr_types","room_ids","start_dtms","chairman_usr_ids","speaker_usr_ids","guest_layoutids","weekly_periods","durations","room_cuids","invite_usr_nick_names","mr_names","launcher_usr_ids","speaker_layoutids","bandwidths","chairman_layoutids","extras","schedule_ids","auto_mutes","auto_invites","join_pwds","ctrl_pwds","invite_usr_ids","cared_status","invite_endpoint_ids","endpoint_cared_status","weekly_first_dtms","schedule_id","fail_ids"],"mappings":"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","file":"static/js/app.4d96b1364b0d8c24efa0.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b21dbfd8\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b21dbfd8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!px2rem-loader?{\\\"remUnit\\\":37.5}!less-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nvar __vue_script__ = null\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b21dbfd8\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\nimport Router from 'vue-router';\n\nVue.use(Router);\n\nconst routes = [\n  {\n    name: 'home',\n    alias: ['/'],\n    path:'/meeting/home',\n    component: () => import('./view/meeting/home.vue'),\n    meta: {\n      title: '预约会议'\n    }\n  },\n  {\n    name: 'week-list',\n    path:'/meeting/week-list',\n    component: () => import('./view/meeting/week-list.vue'),\n    meta: {\n      title: '时间列表'\n    }\n  },\n  {\n    name: 'meeting-details',\n    path:'/meeting/meeting-details',\n    component: () => import('./view/meeting/meeting-details.vue'),\n    meta: {\n      title: '会议详情'\n    }\n  },\n  {\n    name: 'edit-details',\n    path:'/meeting/edit-details',\n    component: () => import('./view/meeting/edit-details.vue'),\n    meta: {\n      title: '编辑会议详情'\n    }\n  },\n  {\n    name: 'appointment',\n    path:'/meeting/appointment',\n    component: () => import('./view/meeting/appointment.vue'),\n    meta: {\n      title: '预约会议'\n    }\n  },\n  {\n    name: 'people-list',\n    path:'/meeting/people-list',\n    component: () => import('./view/meeting/people-list.vue'),\n    meta: {\n      title: '通讯录'\n    }\n  },\n  {\n    name: 'choose-list',\n    path:'/meeting/choose-list',\n    component: () => import('./view/meeting/choose-list.vue'),\n    meta: {\n      title: '选择参会人员'\n    }\n  },\n  {\n    name: 'choose-cloud',\n    path:'/meeting/choose-cloud',\n    component: () => import('./view/meeting/choose-cloud.vue'),\n    meta: {\n      title: '选择参会人员'\n    }\n  }\n];\n\nconst router = new Router({ \n  mode: 'history',\n  routes: routes \n});\n\nexport {\n  router\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/router.js","import api from '../api/meeting.api.js'\nimport local from './local.service.js'\nlet isInit = true\nexport default {\n  init: (router) => {\n    console.log('init路由')\n    if(isInit){\n        // api.getVerify().then(res => {\n        //     console.log(res)\n        //     let loginData = {\n        //       'cmdid': res.data.cmdid,\n        //       'tenant_id': '800', // 必填， 租户局号， str 型。\n        //       'login_id': \"18234044810@802\", // 必填， 登录名， 如；admin@viazijing   {用户名}@{局号}， 或者可以直接写 admin， str 型。\n        //       'login_pwd': \"Lv123456@\", // 必填， 登录密码， str 型。\n        //       'login_type': 2, // 必填， 1表示管理员登录 2 表示用户登录， int型 注：移动端都为用户登录\n        //       'cert_code': res.data.cert_code, // 验证码 str 型。\n        //       'client_ip': \"127.0.0.1\", // 客户端ip地址， str 型。\n        //       'date_time': res.data.date_time // 获取验证的时候拿到\n        //     }\n        //     api.login(loginData).then(resData => {\n        //       console.log(resData)\n        //       local.set('session_id', resData.data.session_id)\n        //       isInit = false\n        //     })\n        // })\n    }\n    router.beforeEach((to, from, next) => {\n        console.log('每次设置路由')\n        next()\n    })\n  },\n  load: (routes) => {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/init.service.js","//import './common/rem';\nimport 'lib-flexible/flexible';\nimport Vue from 'vue';\nimport App from './App.vue';\nimport { router } from './router.js';\nimport initService from './service/init.service.js'\n\nVue.config.productionTip = false\n\ninitService.init(router)\n\nnew Vue({\n  router,\n  el: '#app',\n  render: h => h(App)\n});\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import Promise from \"es6-promise\";\nimport axios from 'axios'\n// const  axios = require('axios');\n// const Promise = require('./promise.service.js')\n//import userService from \"./user.service\";\n//import {Toast} from \"qg-vue-components2\";\n//import router from '../../router';\n\n// 每一个请求都会进入队列并附带一个定时，在请求成功后清除，当请求时间超过200Ms时会自动唤起全局的loading，在 timeout/所有请求结束后清空\n//import store from '../store/index'\n// let httpQueue = [],\n// \ttimeout = 200,\n// \tloadingTimeOut,\n// \tcloseTimeOut\n\n// function beforeRequest(url) {\n// \thttpQueue.push(url)\n// \tloadingTimeOut = setTimeout(()=> {\n// \t\tif (httpQueue.length !== 0 && !store.state.qg.loading.open) {\n// \t\t\tstore.dispatch('openLoading')\n// \t\t}\n// \t}, timeout)\n// \tcloseTimeOut = setTimeout(()=> {\n// \t\tif (store.state.qg.loading.open) {\n// \t\t\tstore.dispatch('closeLoading')\n// \t\t}\n// \t}, 5000)\n// }\n\n// function afterRequest(url) {\n// \tclearTimeout(loadingTimeOut)\n// \tvar index = httpQueue.indexOf(url);\n// \tif (index > -1) {\n// \t\thttpQueue.splice(index, 1);\n// \t}\n// \tif (httpQueue.length == 0) {\n// \t\tsetTimeout(()=> {\n// \t\t\tstore.dispatch('closeLoading')\n// \t\t}, 200)\n// \t}\n// }\n//axios\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\naxios.defaults.timeout = 30000;\n\n// 添加响应拦截器\n// axios.interceptors.response.use(function (response) {\n// \t// 对响应数据做点什么\n// \tlet returnData = response.data\n// \tif (returnData.code === '0000') {\n// \t\tif (returnData.businessCode === '0001' && returnData.msg) { // 默认非0000 有msg都要底层弹提示信息的\n// \t\t\tToast(returnData.msg)\n// \t\t\t// router.replace({name: 'error'})\n// \t\t\treturn Promise.reject(returnData)\n// \t\t} else {\n// \t\t\treturn returnData\n// \t\t}\n// \t} else {\n// \t\tToast(returnData.msg)\n// \t\trouter.push({name: 'error'})\n// \t\t// return Promise.reject(returnData)\n// \t}\n// }, function (error) {\n// \t// 对响应错误做点什么\n// \tif (error.code === 'ECONNABORTED' || !error.response) { // 请求超时\n// \t\tToast('请求超时, 请重试')\n// \t\tlet data = {\n// \t\t\tbusinessCode: '0100',\n// \t\t\tcode: '0100',\n// \t\t\tdata: '请求超时'\n// \t\t}\n// \t\treturn Promise.reject(data)\n// \t}\n// \tlet errorData = error.response\n// \tlet returnData = error.response.data\n\n// \tif (errorData.status === 401 || returnData.code === '0401') {\n// \t\tuserService.goLogin()\n// \t\treturn\n// \t}\n// \tif (errorData.status === 404) {\n// \t\trouter.replace({name: 'home'})\n// \t\treturn\n// \t}\n// \trouter.push({name: 'error'})\n// });\n\nfunction formatParams(data) {\n\tlet key = Object.keys(data)\n\tlet result = ''\n\tkey.map((ele) => {\n\t\tresult += `${ele}=${encodeURIComponent(data[ele])}&`\n\t})\n\treturn result.slice(0, -1)\n}\n\nexport default {\n\tget(url, options = {}) {\n\t\tif(!options.headers){\n\t\t\toptions.headers = {};\n\t\t}\n\t\t//options.headers['X-Auth-Token'] = userService.getToken()\n\t\t//beforeRequest(url)\n\t\treturn new Promise((resolve, reject) => {\n\t\t\taxios.get(url, options).then((response) => {\n\t\t\t\t//afterRequest(url)\n\t\t\t\tresolve(response)\n\t\t\t}).catch((response) => {\n\t\t\t\t//afterRequest(url)\n\t\t\t\treject(response)\n\t\t\t})\n\t\t})\n\t},\n\tpost(url, data, options = {}) {\n\t\tif(!options.headers){\n\t\t\toptions.headers = {};\n\t\t}\n\t\t//options.headers['X-Auth-Token'] = userService.getToken()\n\t\t//beforeRequest(url)\n\t\tif ( options.headers && options.headers['Content-Type'] === 'application/json') {\n\t\t\t// data = data\n\t\t} else {\n\t\t\tdata = formatParams(data)\n\t\t}\n\t\treturn new Promise((resolve, reject) => {\n\t\t\taxios.post(url, data, options).then((response) => {\n\t\t\t\t//afterRequest(url)\n\t\t\t\tresolve(response)\n\t\t\t}).catch((response) => {\n\t\t\t\t//afterRequest(url)\n\t\t\t\treject(response)\n\t\t\t})\n\t\t})\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/http.service.js","let protocol = window.location.protocol\n\nlet apiHost = protocol + '//mapi.q-gp.com/'\n\nexport default {\n\tApiBaseUrl: apiHost\n}\n\n\n// WEBPACK FOOTER //\n// ./src/config/pro.config.js","import pro from './pro.config.js'\nimport dev from './dev.config.js'\nvar _exports = {};\n\n_exports = process.env.NODE_ENV === 'production' ? pro : dev;\nexport default _exports;\n\n\n// WEBPACK FOOTER //\n// ./src/config/index.js","let protocol = window.location.protocol\n\nlet apiHost = protocol + '//mapi.q-gp.com/'\n\nexport default {\n\tApiBaseUrl: apiHost\n}\n\n\n// WEBPACK FOOTER //\n// ./src/config/dev.config.js","import axios from '../service/http.service.js'\nimport api from '../config/index.js'\nimport local from '../service/local.service.js'\nrequire('../mock.js')\n\nconst apiBase = api.ApiBaseUrl\n\nexport default {\n  getHomeData () {\n\t\treturn axios.get(`${apiBase}mall/home?channel=1`)\n  },\n  test(){\n    return axios.get('msg')\n  },\n  //获取验证码\n  getVerify(){\n    return axios.get('/rest/v1/app1/user/sessions/verify-code/')\n  },\n  //登录\n  login(options){\n    return axios.post('/rest/v1/app1/user/sessions/login_req/', options)\n  },\n  //通讯录\n  searchPeople(options){\n    let sessionid = local.get('session_id') || ''\n    return axios.post(`/rest/v1/app1/user/sessions/${sessionid}/departments/department_ids/search/`, options)\n  },\n  //订阅部门\n  searchDepartments(options){\n    let sessionid = local.get('session_id') || ''\n    return axios.post(`/rest/v1/app1/user/sessions/${sessionid}/departments/department_ids/`, options)\n  },\n  searchChildren(options){\n    let sessionid = local.get('session_id') || ''\n    return axios.post(`/rest/v1/app1/user/sessions/${sessionid}/departments/children_ids/`, options)\n  },\n  //获取会议列表数据\n  getMeetingList(options){\n    let sessionid = local.get('session_id') || ''\n    return axios.post(`/rest/v1/app1/user/sessions/${sessionid}/schedules/schedule_ids/search/`, options)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/api/meeting.api.js","var pluses = /\\+/g;\n\nvar jsonRegex = /^\\{(.+:.+,*)*}$/;\n\nvar encode = function (s) {\n    return _cookie.raw ? s : encodeURIComponent(s);\n}\n\nvar decode = function (s) {\n    return _cookie.raw ? s : decodeURIComponent(s);\n}\n\nvar stringifyCookieValue = function (value) {\n    return encode(_cookie.json ? JSON.stringify(value) : String(value));\n}\n\nvar parseCookieValue = function (s) {\n    if (s.indexOf('\"') === 0) {\n        s = s.slice(1, -1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, '\\\\');\n    }\n    try {\n        s = decodeURIComponent(s.replace(pluses, ' '));\n        return _cookie.json ? JSON.parse(s) : s;\n    } catch (e) {}\n}\n\nvar read = function (s, converter) {\n    var value = _cookie.raw ? s : parseCookieValue(s);\n\n    return typeof cb == \"function\" ? converter(value) : value;\n}\n\nvar _cookie = function (key, value, options) {\n    // Write\n    if (arguments.length > 1 && !(typeof cb == \"function\")) {\n        options = options ? options : {};\n        if (typeof options.expires === 'number') {\n            var days = options.expires,\n                t = options.expires = new Date();\n            t.setMilliseconds(t.getMilliseconds() + days * 864e+5);\n        }\n        return (document.cookie = [\n            encode(key), '=', stringifyCookieValue(value),\n            // use expires attribute, max-age is not supported by IE\n            options.expires ? '; expires=' + options.expires.toUTCString() : '',\n            options.path ? '; path=' + options.path : '',\n            options.domain ? '; domain=' + options.domain : '',\n            options.secure ? '; secure' : ''\n        ].join(''));\n    }\n    var result = key ? undefined : {},\n        cookies = document.cookie ? document.cookie.split('; ') : [],\n        i = 0,\n        l = cookies.length;\n    for (; i < l; i++) {\n        var parts = cookies[i].split('='),\n            name = decode(parts.shift()),\n            cookie = parts.join('=');\n        if (key === name) {\n            result = read(cookie, value);\n            break;\n        }\n        if (!key && (cookie = read(cookie)) !== undefined) {\n            result[name] = cookie;\n        }\n    }\n    return result;\n};\n\nvar cookieStorage = {\n    cookieKeyPrefix: \"__localStorage__\",\n    get: function(key) {\n        return _cookie(this.cookieKeyPrefix + key);\n    },\n    set: function(key, value) {\n        return _cookie(this.cookieKeyPrefix + key, value, {\n            expires: 365\n        });\n    },\n    clear: function() {\n        var cookies = document.cookie.split(\";\");\n        for (var i = 0; i < cookies.length; i++) {\n            var key = cookies[i].split(\"=\")[0];\n            _cookie(key, \"\", {\n                expires: -1\n            })\n        }\n    },\n    remove: function(key) {\n        return _cookie(this.cookieKeyPrefix + key, \"\", {\n            expires: -1\n        })\n    }\n};\n\nvar localStorage = {\n    get: function(key) {\n        return window.localStorage.getItem(key);\n    },\n    set: function(key, value) {\n        return window.localStorage.setItem(key, value);\n    },\n    clear: function() {\n        return window.localStorage.clear();\n    },\n    remove: function(key) {\n        return window.localStorage.removeItem(key);\n    }\n};\n\nvar originStorage = (function () {\n    var supportLocalStorage = true;\n    try {\n        window.localStorage.setItem('__test__', 1);\n        window.localStorage.getItem('__test__');\n        window.localStorage.removeItem('__test__');\n    } catch (e) {\n        supportLocalStorage = false;\n    }\n    return supportLocalStorage ? localStorage : cookieStorage;\n})();\n\nexport default { // 可以存对象，不限于字符串。\n    get: function(k) {\n        var _return = originStorage.get(k);\n        if (!_return) {\n            _return = '';\n        }\n        if (jsonRegex.test(_return)) {\n            return JSON.parse(_return);\n        }\n        return _return;\n    },\n    set: function(k, v) {\n        if (v == null || v == undefined || Object.prototype.toString.call(v) === \"[object String]\") {\n            originStorage.set(k, v);\n        } else {\n            originStorage.set(k, JSON.stringify(v));\n        }\n    },\n    clear: function() {\n        return originStorage.clear();\n    },\n    remove: function(k) {\n        return originStorage.remove(k);\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/local.service.js","import Mock from 'mockjs'\n// 需要注意的事项：\n// 1.需要先获取验证码去登录，登录成功获取到session_id，使用session_id才可以调用通讯录和预约会议API，用户名：18234044810@802 密码：Lv123456@\n// 2.获取通讯录 \n// 获取验证码 \n// get\nMock.mock('/rest/v1/app1/user/sessions/verify-code/', {\n  'base64':\"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\",\n  'cert_code':\"243576\",\n  'cmdid':\"verify_code\",\n  'date_time':1530760880.877523\n})\n// 登录\n// POST\n// /rest/v1/app1/user/sessions/login_req/ \n// loginData = {\n//   'cmdid': 'login_req',        \n//   'tenant_id': '800',   // 必填， 租户局号， str 型。\n//   'login_id': \"18234044810@802\",    // 必填， 登录名， 如；admin@viazijing   {用户名}@{局号}， 或者可以直接写 admin， str 型。\n//   'login_pwd': \"Lv123456@\",   // 必填， 登录密码， str 型。\n//   'login_type': 2,   // 必填， 1表示管理员登录 2 表示用户登录， int型 注：移动端都为用户登录\n//   'cert_code': \"243576\",  // 验证码 str 型。\n//   'client_ip': \"127.0.0.1\", // 客户端ip地址， str 型。\n//   'date_time': 1530760880.877523 // 获取验证的时候拿到\n// }\nMock.mock('/rest/v1/app1/user/sessions/login_req/', {\n  'cmdid':\"login_rsp\",\n  'last_login_ip':\"172.16.2.95\", //上次登录的ip地址\n  'last_login_time':1530758316, //上次此用户登录时间\n  'mod_pwd_flag':0,\n  'result':\"0/success\", // 0表示成功 其他数字表示失败，reason表示原因, 1表示运营商未给开通 2表示用户名或者密码错误 3表示租户局号错误（如果登录时输入了租户局号）\n  'session_id':\"139896888862408\", //session_id 客户端应该存起来， 以后每次访问都会用\n  'tenant_id':\"802\", //租户局号\n  'tenant_tags':[\"ksdj\", \"askdjhflkajsd\", \"asdljflaj\"],//租户标识符\n  'usr_mark':\"00035\",//用户号\n})\nconst sessionid = '139896888862408'\n// 过滤部门\n// POST\n// /rest/v1/app1/user/sessions/{session_id}/departments/department_ids/search/\n// searchDepartData = {\n//   \"cmdid\": \"search_department_ids\",  // 必填\n//   \"filter_type\": [\"\",\"\"],  // 选填， list 型 查询所有传[]\n//   \"filter_value\": [\"\",\"\"],  // 选填， list 型， 和filter_type数组长度必须相等， 且值与 filter_type 中的过滤项一一对应\n//   \"sortby\": \"senior_id\"  // （此值可以是过滤项注释中的选项）希望结果按什么条件进行排序\n// }\nMock.mock(`/rest/v1/app1/user/sessions/${sessionid}/departments/department_ids/search/`, {\n  'cmdid': \"department_ids\",\n  'department_ids': [556, 560, 561, 572, 602, 562, 563, 584, 589] // 搜索到的部门id\n})\n\n// 订阅部门\n// POST \n// /rest/v1/app1/user/sessions/{session_id}/departments/department_ids/\n// subDepartData = {\n//   'cmdid': \"subscribe_department\", // 必填\n//   'department_ids': [556, 560, 561, 572, 602, 562, 563, 584, 589], // 必填 订阅的部门id\n//   'last_modify_dtms': [0, 0, 0, 0, 0, 0, 0, 0, 0],   // 必填， list 型 内部包含 int 型的时间戳，与 department_id 一一对应， 上次修改的时间戳， 单位： 秒。当 department_id 的 last_modify_dtm 大于请求中的该部门对应的 last_modify_dtm 时， 服务器将返回该部门信息， 否则将不予返回。 首次请求时， last_modify_stm 为 0。\n// } \nMock.mock(`/rest/v1/app1/user/sessions/${sessionid}/departments/department_ids/`, {\n  \"cmdid\": \"department_info\",  // 服务端收到search_department后， 发给客户端， 以下所有字段均为 list， 且长度相等\n  \"senior_ids\": [-1, 556, 556, 561, 561, 556, 572, 572, 556],  // 上级部门的 department_id   如果为-1表示无上级部门\n  \"creator_usr_ids\": [-255, -255, -255, -255, -255, -255, -255, -255, -255],  // 部门创建者usr_id\n  \"last_modify_dtms\": [1527325573, 1526907919, 1526957817, 1526968892, 1526969845, 1527473679, 1527045571, 1527495192, 1529404911],  // 部门信息的上次修改时间\n  \"department_ids\": [556, 560, 561, 562, 563, 572, 584, 589, 602], // 部门ID 为数据库唯一标识\n  \"department_names\": [\"总公司\", \"研发部\", \"陈\", \"测试\", \"陈陈\", \"测试部\", \"质量部\", \"11\", \"测试部1\"],   // 部门名称\n  \"department_descs\": [\"总公司总公司\", \"研发部研发部\", \"陈陈陈陈\", \"测试\", \"陈陈\", \"1111\", \"1111\", \"\", \"测试部1\"],  // 部门描述\n  \"create_dtms\": [1526902644, 1526907919, 1526957817, 1526968892, 1526969845, 1526995773, 1527045571, 1527495192, 1529404911]  // 部门创建时间\n})\n// 获取本部门的直接下属部门id、name 及 直接隶属本部门的 用户/终端/管理员 登陆id 和 在线状态\n// POST\n// /rest/v1/app1/user/sessions/{session_id}/departments/children_ids/\n// getDepartData = {\n//   \"cmdid\": \"get_department\",  // 必填\n//   \"department_id\": 12,  // 必填， int 型， 部门ID \n//   \"last_modify_dtm\": 154326728,  // 必填， int 型， 上次修改的时间戳， 单位： 秒\n//   \"option\": \"usr\",  // 必填， str 型， 只能填写 usr\n//   \"activate\": 0/1/2/3  // 选填， int 型， 当 option 为 usr/endpoint/manager 时， 如果此值不传， 表示获取所有 用户/终端/管理员/用户和管理员 的 login_id 和 usr_id 信； 当此值为 0 时， 表示获取账户状态为 未激活 的 用户/终端/管理员/用户和管理员 的 login_id 和 usr_id 信息； 当此值为 1 时， 表示获取账户状态为 激活 的 用户/终端/管理员/用户和管理员 的 login_id 和 usr_id 信息； 当此值为 2 时， 表示获取账户状态为 被禁用 的 用户/终端/管理员/用户和管理员 的 login_id 和 usr_id 信息；当此值为 3 时， 表示获取账户状态为 启用（激活或未激活） 的 用户/终端/管理员/用户和管理员 的 login_id 和 usr_id 信息；\n// }\nMock.mock(`/rest/v1/app1/user/sessions/${sessionid}/departments/children_ids/`, {\n  \"cmdid\": \"get_department_rsp\", \n  \"department_names\": [\"研发部\", \"陈\", \"测试部\", \"测试部1\"],  // 直属部门的department_name\n  \"department_ids\": [560, 561, 572, 602], // 直属部门的id,如果没有下级部门则为[]\n  \"usr_online_status\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // 直接隶属本部门的人员在线状态\n  \"usr_ids\": [465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 486], //用户usr_id\n  \"usr_nick_names\": [\"小\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"cybeyond_26\", \"cybeyond_27\", \"\", \"123\", \"\"], // 用户昵称\n  \"usr_login_ids\": [\"cybeyond_11\", \"cybeyond_12\", \"cybeyond_13\", \"cybeyond_14\", \"cybeyond_15\", \"cybeyond_16\", \"cybeyond_17\", \"cybeyond_18\", \"cybeyond_19\", \"cybeyond_20\", \"cybeyond_21\", \"cybeyond_22\", \"cybeyond_23\", \"cybeyond_24\", \"cybeyond_25\", \"cybeyond_26\", \"cybeyond_27\", \"cybeyond_28\", \"cybeyond_29\", \"chenchen\"], //用户login_id \n  \"senior_id\": -1 // 本部门的直接上级部门id\n})\n\n// 查询用户\n// POST\n// /rest/v1/app1/user/sessions/{session_id}/usrs/usr_id/search/\n// searchUsrData = {\n//   cmdid:\"search_usr\", // 必填\n//   filter_type:[\"nick_name\", \"usr_type\", \"is_endpoint\"], // 选填， list 型， 和 filter_value 一一对应， 如果不传， 将返回所有的 usr_id。\n//   filter_value:[\"a\", \"2\", \"0\"], // 选填， list 型， 其内的参数值的类型按其自身类型走。\n//   sortby:\"login_id\" // 选填， str 型， 以什么字段排序  字段可以是 filter_type 中的任意一项\n// }\nMock.mock(`/rest/v1/app1/user/sessions/${sessionid}/usrs/usr_id/search/`, {\n  'cmdid':\"usr_ids\",\n  'usr_ids':[484, 583] //查询到的符合条件的usr_ids\n})\n// 订阅用户\n// POST\n// /rest/v1/app1/user/sessions/{session_id}/usrs/usr_ids/\n// subUsrData = {\n//   cmdid:\"subscribe_usr\", // 必填\n//   last_modify_dtms:[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // 必填， 上次修改的时间戳， int 型， 与 usr_id 一一对应；\n//   usr_ids:[465, 466, 467, 468, 469, 470, 471, 472, 473, 474] // 必填，需要订阅详细信息的用户的 usr_id 的 list，不能为空，ids最多为100个，多了服务器将报错\n// }\nMock.mock(`/rest/v1/app1/user/sessions/${sessionid}/usrs/usr_ids/`, {\n  \"cmdid\": \"usr_info\", \n  \"ptotocol_types\": [3, 3, 3, 3, 3, 3, 3, 3, 3, 3], // 协议类型 1:H323  2:SIP   3:API\n  \"is_endpoints\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  // 是否是终端\n  \"usr_ids\": [465, 466, 467, 468, 469, 470, 471, 472, 473, 474],\n  \"cuids\": [\"80200001\", \"80200002\", \"80200003\", \"80200004\", \"80200005\", \"80200006\", \"80200007\", \"80200008\", \"80200009\", \"80200010\"], //完整的用户号\n  \"phone_nos\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], //手机号\n  \"nick_names\": [\"小\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], // 昵称\n  \"activates\": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], // 此用户是否可用状态    0表示被禁止， 1表示现在可用\n  \"creator_times\": [1528727254, 1526982198, 1526982198, 1527502479, 1528727254, 1528727254, 1526982199, 1526982199, 1528727254, 1526982199], \n  \"current_department\": [[556], [556], [556], [556], [556], [556], [556], [556], [556], [556]], //用户所属部门\n  \"last_modify_dtms\": [1529916380, 1529916380, 1529916380, 1529916380, 1529916380, 1529916380, 1529916380, 1529916380, 1529916380, 1529916380], \n  \"verifies\": [\"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\", \"00\"], // 第一位表示手机是否验证， 第二位表示邮箱是否验证， 0表示未验证， 1表示验证， 如: 01， 表示手机未验证， 而邮箱已经验证\n  \"usr_types\": [2, 2, 2, 2, 2, 2, 2, 2, 2, 2], // 用户类型  0: 超级管理员 1:管理员  2:用户\n  \"duties\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], //职位\n  \"online_status\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], //用户的在线状态， 0 表示离线， 1 表示用户在线， 2 表示用户已入会\n  \"max_rooms\": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], //此用户最大的私有会议室数量\n  \"call_addrs\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], //可用于呼叫的地址， 服务器根据此地址找到端， 进行邀请入会\n  \"valid_periods\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // 账号的有效期， 0 表示长期\n  \"emails\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], //邮箱\n  \"login_ids\": [\"cybeyond_11\", \"cybeyond_12\", \"cybeyond_13\", \"cybeyond_14\", \"cybeyond_15\", \"cybeyond_16\", \"cybeyond_17\", \"cybeyond_18\", \"cybeyond_19\", \"cybeyond_20\"], \n  \"fixed_phones\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], //座机\n  \"creator_usr_ids\": [-255, -255, -255, -255, -255, -255, -255, -255, -255, -255], //创建此用户的管理员\n  \"usr_avatars\": [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"], //头像url\n  \"priorities\": [100, 100, 100, 100, 100, 100, 100, 100, 100, 100],  //优先级\n  \"priv_room_ids\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n  \"usr_marks\": [\"00001\", \"00002\", \"00003\", \"00004\", \"00005\", \"00006\", \"00007\", \"00008\", \"00009\", \"00010\"], //用户号\n  \"genders\": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1] //性别\n})\n\n// TODO 预约会议\n\n// 用户查询预约会议 -- 查询从当前开始往后7天的数据\n// POST\n// /rest/v1/app1/user/sessions/{session_id}/schedules/schedule_ids/search/\n// searchSchedulesData = {\n//   \"cmdid\": \"usr_search_schedule\",  // 必填\n//   \"filter_type\": [],  // 选填， 同上\n//   \"filter_value\": [],  // 选填， 同上\n//   \"start_end_time\": [1530758790, 1531363590],  // 必填， 查询范围的起止时间戳， 单位秒， 前者为开始时间， 后者为终止时间\n// }\nMock.mock(`/rest/v1/app1/user/sessions/${sessionid}/schedules/schedule_ids/search/`, {\n  \"cmdid\": \"usr_search_schedule_rsp\",\n  \"priority_mps\": [0, 0, 0],  // 优先 mp 资源, 0表示不优先， 1表示优先\n  \"launcher_usr_nick_names\": [\"吕甜\", \"吕甜\", \"吕甜\"], // 发起人nick_name\n  \"locks\": [0, 0, 0], // 是否锁定会议， 1表示锁定， 0表示不锁定\n  \"mr_types\": [0, 0, 0], // 会议类型  0:private  1:public\n  \"room_ids\": [211, 211, 144],// 会议室ID\n  \"start_dtms\": [[1531094432], [1531112450], [1531466364]], // 二维数组， 与每个预约会议一一对应，周期性会议有多个\n  \"chairman_usr_ids\": [-1, -1, -1], // 主持ID\n  \"speaker_usr_ids\": [-1, -1, -1],// 演讲人ID\n  \"guest_layoutids\": [-1, -1, -1],\n  \"weekly_periods\": [\"1\", \"1\", \"0\"], // 周期描述， 0表示一次性预约， 否则按位表示每周的哪天有预约， 如 b0000101 表示周一、 周三； 每周两次\n  \"durations\": [7200, 7200, 10800], // 会议时长 单位秒\n  \"room_cuids\": [\"8020003501\", \"8020003501\", \"8020013\"],\n  \"invite_usr_nick_names\": [[\"吕甜\", \"吕甜2\"], [\"吕甜\"], [\"吕甜\"]], // 受邀人nickName\n  \"mr_names\": [\"我是会议名称\", \"wfdsafsafdsafdsf\", \"aaaaaaaaaaaaaaaaaaaaaa\"],//会议名称\n  \"launcher_usr_ids\": [795, 795, 795],  // 发起人ID\n  \"speaker_layoutids\": [-1, -1, -1],\n  \"bandwidths\": [1024, 1024, 1024],//带宽\n  \"chairman_layoutids\": [-1, -1, -1],\n  \"extras\": [\"最新的会议详情，测一下，无“测试,xia”，密码7896，我的云会议室，周期：周一，,buyaoqing\", \"会议描述\", \"dsafsafdsaf 13 \"],  // 会议说明\n  \"schedule_ids\": [62, 63, 66],//预约会议id\n  \"auto_mutes\": [2, 2, 2], // 入会静音\n  \"auto_invites\": [0, 1, 0] // 自动邀请入会\n})\n\n// 订阅预约会议\n// post\n// subSchedulesData= {\n//   \"cmdid\": \"subscribe_schedule\",  // 必填\n//   \"schedule_ids\": [62],  // 必填， 最多可以同时订阅100个\n// }\nMock.mock(`/rest/v1/app1/user/sessions/${sessionid}/schedules/schedule_ids/`, {\n  \"cmdid\": \"schedule_room_info\",\n  \"schedule_ids\": [62],\n  \"room_ids\": [211], // 会议室ID\n  \"mr_names\": [\"我是会议名称\"], // 会议名称\n  \"join_pwds\": [\"1234\"], // 入会密码\n  \"ctrl_pwds\": [\"1234\"], // 控会密码\n  \"start_dtms\": [[1531094432]],  // 此时间必须和 weekly_period 配套，否则服务器将返回400， 如: 如果 start_dtms 时间显示周5， 而 weekly_period 值指示周5没有重复，则此预约作废\n  \"durations\": [7200],  // 单位秒\n  \"bandwidths\": [1024],\n  \"mr_types\": [0],  // 会议类型  0:private  1:public\n  \"launcher_usr_ids\": [795], // 发起人的id\n  \"chairman_usr_ids\": [-1],\n  \"speaker_usr_ids\": [-1],\n  \"invite_usr_ids\": [[795], []],  // 受邀的人员 id\n  \"cared_status\": [[], []],  // 受邀的人员的关注情况， 哪个人员的 id 在这里， 就表示谁被关注\n  \"invite_endpoint_ids\": [[], []],  // 受邀的终端 id\n  \"endpoint_cared_status\": [[], []],  // 受邀的终端的关注情况， 哪个终端的 id 在这里， 就表示谁被关注\n  \"chairman_layoutids\": [-1],\n  \"speaker_layoutids\": [-1],\n  \"guest_layoutids\": [-1],\n  \"auto_invites\": [0],\n  \"auto_mutes\": [2],\n  \"weekly_periods\": ['1'],  // 周期描述， '0'表示一次性预约， 否则按位表示每周的哪天有预约， 如 '101' 表示周一、 周三； 每周两次 倒着推 最末位表示周一，前位0省略\n  \"weekly_first_dtms\": [-1],  // 如果是周期性会议， 记录第一次启动的时间， 该值只是用来备注的， 无其他用途\n  \"priority_mps\": [0],  // 优先 mp 资源, 0表示不优先， 1表示优先\n  \"locks\":  [0],  // 是否锁定会议， 1表示锁定， 0表示不锁定\n  \"extras\": [\"最新的会议详情，测一下，无“测试,xia”，密码7896，我的云会议室，周期：周一，,buyaoqing\"]  // 会议说明\n})\n\n// 新建预约会议\n// post\n// addSchedules = {\n//   \"cmdid\": \"add_schedule\",  // 必填\n//   \"room_id\": 88,  // 必填， int 型， 服务器根据此字段确定预约会议在哪个会议室召开\n//   \"mr_name\": \"\",  // 选填， 会议名称， str 型\n//   \"join_pwd\": \"\",  // 选填， str 型\n//   \"ctrl_pwd\": \"\",  // 选填， str 型\n//   \"auto_stop_secs\": 120,  // 选填， int 型， 当会议开启后， 多长时间内无终端进入就自动结束当前会议， 单位： 秒， 默认 2 分钟\n//   \"start_dtm\": 1531094432,  // 必填， 预约开始时间， linux 的时间戳的 int 值， 注意对于周期性预约会议， 表示第一次的启动时间， 这样每次预约启动后， 服务器就会修改该值到下一个开始时间， 单位秒， 如果此值为0表示立即开会\n//   \"duration\": 7200,  // 必填， int 型， 预约会议的持续时间， 单位秒\n//   \"bandwidth\": 1024,  // 选填， int 型， 默认1024\n//   \"mr_type\": 0/1,  // 必填，  int 型， 会议类型  0: private  1: public（管理员只能创建公共会议， 用户只能创建私有会议）\n//   \"chairman_usr_id\": \"\",  // 选填， int 型， 主席\n//   \"speaker_usr_id\": \"\",  // 选填， int 型， 预设演讲者\n//   \"chairman_layoutid\": 1,  // 选填， int 型 主席布置ID\n//   \"speaker_layoutid\": 1,  // 选填， int 型 预设演讲者\n//   \"invite_usr_ids\": [],  // 选填， 新建预约时可以指定几个用户的 usr_id,  int 型的 usr_id 组成的 list\n//   \"invite_endpoint_ids\": [],  // 选填， 新建预约时可以指定几个终端的 usr_id,  int 型的 usr_id 组成的 list\n//   \"cared_status\": [1, 12, 54],  // 选填， usr_id 组成的 list， 表示 invite_usr_ids 中的用户是否被关注， 如果 invite_usr_ids 中有用户需要被关注， 则在此字段中添加该用户的 usr_id；\n//   \"endpoint_status\": [11, 33],  // 选填， usr_id 组成的 list， 表示 invite_endpoint_ids 中的用户是否被关注， 如果 invite_endpoint_ids 中有用户需要被关注， 则在此字段中添加该用户的 usr_id；\n//   \"guest_layoutid\": 1,  // 选填， int 型\n//   \"auto_invite\": 0,  // 选填， int 型， 1表示会议开启时，自动邀请所有参会端，0表示不邀请， 默认值为 0。\n//   \"auto_mute\": 2,  // 选填， int 型， 0：不静音，1：入会静音，2：入会智能静音（第6个以后的入会者自动静音）\n//   \"weekly_period\": '101',  // 必填， '0'表示一次性预约， 否则按位表示每周的哪天有预约， 如 '101' 表示周一、 周三； 每周两次 倒着推 最末位表示周一，前位0省略\n//   \"priority_mp\": 0,  // 选填， int 型， 优先 mp 资源， 0表示不优先， 1表示优先， 默认为0\n//   \"lock\": 0,  // 选填， int 型， 是否锁定会议， 1表示锁定， 0表示不锁定， 默认为0\n//   \"extra\": \"本次会议的说明\"  // 选填， str 型， 本次会议的说明\n// }\nMock.mock(`/rest/v1/app1/user/sessions/${sessionid}/schedules/`, {\n  \"cmdid\": \"add_schedule_rsp\",\n\t\"result\": \"0/success\", \n\t\"schedule_id\": 22  // 本次预约会议的 id\n})\n// 修改预约会议\n// put\n// editSchedules = {\n//   \"cmdid\": \"mod_schedule\",  // 必填\n//   \"schedule_id\": 222,  // 必填， int 型， 服务器根据此字段判定修改哪个预约会议\n//   \"room_id\": \"\",  // 选填， int 型\n//   \"mr_name\": \"\",  // 选填， str 型\n//   \"join_pwd\": \"\",  // 选填， str 型\n//   \"ctrl_pwd\": \"\",  // 选填， str 型\n//   \"start_dtm\": 1531094432,  // 选填， 时间戳的 int 值\n//   \"duration\": 7200,  // 选填， int 型， 持续时间， 单位秒\n//   \"bandwidth\": 1024,  // 选填， int 型， 带宽\n//   \"launcher_usrid\": \"\",  // 选填， int 型\n//   \"trans_id\": 12255,  // 选填\n//   \"chairman_usr_id\": \"\",  // 选填， int 型\n//   \"speaker_usr_id\": \"\",  // 选填， int 型\n//   \"chairman_layoutid\": 1,  // 选填， int 型\n//   \"speaker_layoutid\": 1,  // 选填， int 型\n//   \"guest_layoutid\": 1,  // 选填， int 型\n//   \"auto_invite\": 1,  // 选填， int 型\n//   \"auto_mute\": 2,  // 选填， int 型， 0不静音， 1入会静音， 2入会智能静音（第6个以后的入会者自动静音）， 默认为1\n//   \"priority_mp\": 0/1,  // 选填， int 型， 优先mp资源, 0表示不优先，1表示优先\n//   \"lock\": 0/1,  // 选填， int 型， 是否锁定会议，1表示锁定，0表示不锁定\n//   \"auto_stop_secs\": 122,  // 选填， int 型， 单位： 秒， 会议开启后多少秒内无端进入， 该会议将自动结束. \n//   \"extra\": \"本次会议的说明\"  // 选填， str 型， 本次会议的说明\n// }\nMock.mock(`/rest/v1/app1/user/sessions/${sessionid}/schedules/`, {\n  \"cmdid\": \"add_schedule_rsp\",\n\t\"result\": \"0/success\", \n\t\"schedule_id\": 22  // 本次预约会议的 id\n})\n// 删除预约会议\n// POST\n// delSchedules = {\n//   \"schedule_ids\": [],  // 必填， 想要删除的会议的 schedule_id， list 里面包含一个或多个 schedule_id。\n//   \"cmdid\": \"delete_schedule\"  // 必填\n// }\nMock.mock(`/rest/v1/app1/user/sessions/${sessionid}/schedules/trash-can/`, {\n  \"cmdid\": \"delete_schedule_rsp\",\n\t\"fail_ids\": [1,2]  // 删除失败的 id\n})\n\n\n// WEBPACK FOOTER //\n// ./src/mock.js"],"sourceRoot":""}